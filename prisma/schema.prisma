// https://www.prisma.io/docs/orm/overview/databases/postgresql

generator client {
  provider        = "prisma-client-js"
  binaryTargets   = ["native", "rhel-openssl-3.0.x"]
  //previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // usa pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // usa conexão direta
}

model Usuario {
  id            Int       @id @default(autoincrement())
  nome          String
  ra            String?    @unique // Registro do Aluno
  cpf           String    @unique
  senha         String
  email         String    @unique
  imei          String?   @unique // Codigo indicador único do dispositivo
  tipo          Int @default(0) // 0 - Aluno , 1 - Professor , 2 - Gerencial
  status        Int @default(0) // 0 - Ativo , 1 - Inativo
  data_cadastro DateTime?

  // Relacionamentos
  TurmaAluno                TurmaAlunos[]
  ChamadaProfessor          Chamada[]   @relation("ProfessorChamadas")
  ChamadaAluno              ChamadaAlunos[]
  SemestreDisciplinaProfessor SemestreProfessorDisciplinas[]

  @@map("usuario")
}

model Semestre { // Semestre do Ano ( 2024/1 ou 2024/2 )
  id            Int       @id @default(autoincrement())
  descricao     String
  data_inicio   DateTime?
  data_final    DateTime?
  padrao        Int // 0 - Sim , 1 - Não

  // Relacionamentos
  TurmaDisciplinas  TurmaDisciplinas[]
  Chamada           Chamada[]
  SemestreDisciplinaProfessor SemestreProfessorDisciplinas[]

  @@map("semestre")
}

model Curso {
  id          Int       @id @default(autoincrement())
  descricao   String

  // Relacionamentos
  Disciplina  Disciplina[]
  Turma       Turma[]

  @@map("curso")
}

model Disciplina { // Matéria
  id          Int       @id @default(autoincrement())
  descricao   String
  id_curso    Int
  carga_horario Int

  // Relacionamentos
  Curso       Curso      @relation(fields: [id_curso], references: [id])
  TurmaDisciplinas  TurmaDisciplinas[]
  Chamada     Chamada[]
  SemestreDisciplinaProfessor SemestreProfessorDisciplinas[]

  @@map("disciplina")
}

model Turma {
  id            Int       @id @default(autoincrement())
  semestre_curso Int  // 1º Semestre, 2º semestre, 3º Semestre ...
  id_curso      Int

  // Relacionamentos
  Curso         Curso      @relation(fields: [id_curso], references: [id])
  TurmaDisciplinas  TurmaDisciplinas[]
  TurmaAluno    TurmaAlunos[]

  @@map("turma")
}

model TurmaDisciplinas {
  id            Int       @id @default(autoincrement())
  id_disciplina Int
  id_semestre   Int // Semestre do ano ( 2024/1 ou 2024/2 )
  id_turma      Int
  semestre_curso Int // Número do semestre que a turma se encontra ( 1º, 2º, 3º, 4º ...)

  // Relacionamentos
  Disciplina    Disciplina  @relation(fields: [id_disciplina], references: [id])
  Semestre      Semestre    @relation(fields: [id_semestre], references: [id])
  Turma         Turma       @relation(fields: [id_turma], references: [id])

  @@map("turma_disciplinas")
}

model TurmaAlunos {
  id        Int       @id @default(autoincrement())
  id_aluno  Int
  id_turma  Int

  // Relacionamentos
  Usuario   Usuario    @relation(fields: [id_aluno], references: [id])
  Turma     Turma      @relation(fields: [id_turma], references: [id])

  @@map("turma_alunos")
}

model Chamada {
  id               Int       @id @default(autoincrement())
  id_professor     Int
  id_disciplina    Int
  id_semestre      Int
  data_hora_inicio DateTime?
  data_hora_final  DateTime?

  // Relacionamentos
  Professor        Usuario    @relation("ProfessorChamadas", fields: [id_professor], references: [id])
  Disciplina       Disciplina @relation(fields: [id_disciplina], references: [id])
  Semestre         Semestre   @relation(fields: [id_semestre], references: [id])
  ChamadaAluno     ChamadaAlunos[]

  @@map("chamada")
}

model ChamadaAlunos {
  id          Int       @id @default(autoincrement())
  id_chamada  Int
  id_aluno    Int

  // Relacionamentos
  Chamada     Chamada    @relation(fields: [id_chamada], references: [id])
  Usuario     Usuario    @relation(fields: [id_aluno], references: [id])

  @@map("chamada_alunos")
}

model SemestreProfessorDisciplinas {
  id           Int       @id @default(autoincrement())
  id_disciplina Int
  id_professor  Int
  id_semestre   Int

  // Relacionamentos
  Disciplina    Disciplina @relation(fields: [id_disciplina], references: [id])
  Professor     Usuario    @relation(fields: [id_professor], references: [id])
  Semestre      Semestre   @relation(fields: [id_semestre], references: [id])

  @@map("semestre_professor_disciplinas")
}